@:Cart = SES.cartridge;



@count = 0;
@:free = [];

@countPalettes = 0;
@:freePalettes = [];

return {
    create::(string, x, y, r, g, b) {
        
        @refs = {
            sprites : [],
            palette : if (freePalettes->keycount) 
                            freePalettes->pop()
                      else ::<= {
                            count += 1;
                            return count - 1;
                      } 
        };
        
        Cart.Palette.set(
            index:refs.palette,
            colors: [
                [r, g, b],
                [r, g, b],
                [r, g, b],
                [r, g, b]
            ]
        );
        
        
        @chX = 0;
        @chY = 0;
                
        [0, string->length]->for(do:::(i) {
            @spr = if (free->keycount) free->pop() else ::<= {
                count += 1;
                return count - 1;
            };
            Cart.Sprite.set(
                index: spr,
                tile: string->charCodeAt(index:i),
                show:true,
                x: chX * GLYPH_WIDTH  + x,
                y: chY * GLYPH_HEIGHT + y,
                palette: color
            );
            chX += 1;
            refs->push(value:spr);
        });
        return refs;
    },
    
    
    destroy::(refs) {
        refs->foreach(do:::(i, spr) {
            Cart.Sprite.set(
                index: spr,
                show:false
            );
        });
        free = [...free, ...refs.sprites];
        freePalettes->push(value:refs.palette);
    }
};
