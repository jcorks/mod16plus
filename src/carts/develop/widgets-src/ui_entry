@:class = import(module:'Matte.Core.Class');
@:Mod16 = import(module:'Mod16Plus.Core');
@:Cartridge = Mod16.Cartridge;
@:Fetcher = Cartridge.import(source:'fetcher');
@:TextArea = Cartridge.subCartridge(name:'textarea');
@:UI = Cartridge.import(source:'ui');


return class(
    inherits:[UI],
    define:::(this) {
    
    
        @:textarea = TextArea.new();
        textarea. = {
            editable : true,
            heightChars: 1,
            layer : this.layer + 1
        };

        @text = '';
        
        @:readjust ::{
            textarea.x = this.x + this.width / 2  - textarea.width  / 2;
            textarea.y = this.y + this.height / 2 - textarea.height / 2;                        
        };
        
        
        this.constructor = ::(text) {
            this.foreground = '#ffffff';
            this.background = '#555555';
            textarea.text = text;
            this.enableBackground = false;
            readjust();
            return this;
        };
        
        
        this.events.installHooks(
            events:{
                onShow ::(detail){
                    textarea.text =  text;
                    textarea.editable = true;
                },
                
                onHide ::(detail){
                    text = textarea.text;
                    textarea.text = '';
                    textarea.editable = false;
                },
                
                onResize ::(detail) {
                    readjust();
                },
                
                onMove ::(detail) {
                    readjust();
                },

                onLayerChange::(detail) {
                    textarea.layer = this.layer + 1;
                }


            }
        );        
        
        
        this.interface = {
            foreground : {
                set ::(value => String) {
                    textarea.defaultPalette = value;   
                }
            },
            

            
            text : {
                set ::(value => String) {
                    text = value;
                    if (this.shown) ::<= {
                        textarea.text = value;
                        readjust();
                    };
                },
                
                get ::(value) {
                    when(this.shown) textarea.text;
                    return text;
                }
            }
        };
    }
);
