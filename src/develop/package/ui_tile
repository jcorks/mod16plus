@:class = import(module:'Matte.Core.Class');
@:UI = import(module:'ui');
@:TextArea = import(module:'textarea');
@:Fetcher = import(module:'fetcher');
@:SES = import(module:'SES.Core');
@:Debug = import(module:'SES.Debug');
return class(
    inherits:[UI],
    define:::(this) {
    
        @:sprite = Fetcher.Sprite.newID();
        
        
        @resizeable = false;
        
        @:reposition :: {
            if (resizeable) ::<= {
                SES.Sprite.set(
                    index:sprite,
                    x:this.x,
                    y:this.y
                );
                SES.Sprite.transform(
                    index:sprite,
                    scaleX: this.width / 8,
                    scaleY: this.height / 8
                );

            } else 
                SES.Sprite.set(
                    index:sprite,
                    x:this.x + this.width / 2 - 4,
                    y:this.y + this.height / 2 - 4
                )
            ;
        
        };
        this.events.installHooks(
            events:{
                onShow ::(detail){
                    SES.Sprite.set(
                        index:sprite,
                        show: true
                    );
                },
                
                onHide ::(detail){
                    SES.Sprite.set(
                        index:sprite,
                        show: false
                    );
                },
                
                onResize ::(detail) {
                    reposition();
                },
                
                onMove ::(detail) {
                    reposition();
                },
                
                onLayerChange::(detail) {
                    SES.Sprite.set(
                        index:sprite,
                        layer: this.layer
                    );
                }

            }
        );        
        
        this.constructor = ::(palette => Number, tile => Number) {
            SES.Sprite.set(
                index:sprite,
                show:true,
                layer: this.layer,
                tile,
                palette
            );  
            return this;
        };
        
        this.interface = {
            palette : {
                set ::(value => Number) {
                    SES.Sprite.set(
                        index:sprite,
                        palette: value
                    );  

                }
            },

            resizeable : {
                set ::(value => Boolean) {
                    resizeable = value;
                    reposition();
                }
            },
            
            tile : {
                set ::(value => Number) {
                    SES.Sprite.set(
                        index:sprite,
                        tile: value
                    );                  
                }
            }
        };

        this.enableBackground = false;
    }
);
